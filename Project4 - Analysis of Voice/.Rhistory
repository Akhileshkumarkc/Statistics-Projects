hist
??hist
par(mfrow = c(1, 4))
hist(Bassitem$height,main="Bass")
hist(Tenoritem$height,main="Tenor")
hist(Altoitem$height,main="Alto")
hist(Sopranoitem$height,main="Soprano")
par(mfrow = c(1, 1))
nb = len(Bassitem$height)
nb = length(Bassitem$height)
nb
nt
nt
nt = length(Tenoritem$height)
nt
samplemeanb =mean(Bassitem$height)
sampleneant =mean(Tenoritem$height)
samplemeanb
mean(Tenoritem$height)
samplevarb = var(Bassitem$height)
samplevart = var(Tenoritem$height)
samplevarb
samplevart
se=sqrt(((samplevarb^2)/nb) + ((samplevart^2)/nt))
se
cint = (sampleanb -samplent)+c(-1,1)*qnorm(1-alpha/2)*se
samplemeanb =mean(Bassitem$height)
cint = (samplemeanb -samplent)+c(-1,1)*qnorm(1-alpha/2)*se
cint = (samplemeanb -sampleneant)+c(-1,1)*qnorm(1-alpha/2)*se
cint
alpha =0.05
cintval =cint(samplemeanb,sampleneant,alpha,se)
cint = function (samplemeanb,sampleneant,alpha,se){
(samplemeanb -sampleneant)+c(-1,1)*qnorm(1-alpha/2)*se
}
alpha =0.05
cintval =cint(samplemeanb,sampleneant,alpha,se)
cintval
alpha =0.1
cintval =cint(samplemeanb,sampleneant,alpha,se)
alpha =0.2
cintval =cint(samplemeanb,sampleneant,alpha,se)
cintval
alpha =0.3
cintval =cint(samplemeanb,sampleneant,alpha,se)
cintval
se=sqrt(((samplevarb)/nb) + ((samplevart)/nt))
se
alpha =0.05
cintval =cint(samplemeanb,sampleneant,alpha,se)
#cint -1.225988  4.385695
alpha =0.1
cintval =cint(samplemeanb,sampleneant,alpha,se)
#-1.225988  4.385695
alpha =0.2
cintval =cint(samplemeanb,sampleneant,alpha,se)
#-0.2547877  3.4144947
alpha =0.3
cintval =cint(samplemeanb,sampleneant,alpha,se)
# 0.09611809 3.06358887
alpha =0.05
cintval =cint(samplemeanb,sampleneant,alpha,se)
cintval
nb = length(Bassitem$height)
#65
nt = length(Tenoritem$height)
#42
samplemeanb =mean(Bassitem$height)
#70.984
sampleneant =mean(Tenoritem$height)
#69.40476
samplevarb = var(Bassitem$height)
#6.327885
samplevart = var(Tenoritem$height)
#7.759001
alpha = 0.05
se=sqrt(((samplevarb)/nb) + ((samplevart)/nt))
#1.431578
#0.5311216
#cint -1.22598 4.385695
alpha =0.05
cintval =cint(samplemeanb,sampleneant,alpha,se)
cintval
alpha =0.1
cintval =cint(samplemeanb,sampleneant,alpha,se)
cintval
alpha =0.2
cintval =cint(samplemeanb,sampleneant,alpha,se)
cintval
alpha =0.3
cintval =cint(samplemeanb,sampleneant,alpha,se)
cintval
amplemeanb =mean(Bassitem$height)
#70.984
sampleneant =mean(Tenoritem$height)
#69.40476
samplevarb = var(Bassitem$height)
samplesdb = sqrt(samplevarb)
#6.327885
samplevart = var(Tenoritem$height)
samplesdt =sqrt(samplevart)
#7.759001
alpha = 0.05
se=sqrt(((samplesdb)^2/nb) + ((samplesdt)^2/nt))
#1.431578
#0.5311216
#cint -1.22598 4.385695
alpha =0.05
cintval =cint(samplemeanb,sampleneant,alpha,se)
cintval
samplevarb = var(Bassitem$height)
samplevarb
samplesdb = sqrt(samplevarb)
samplesdb
samplevart = var(Tenoritem$height)
samplevart
samplesdt =sqrt(samplevart)
samplesdt
singerdata <- read.csv("singer.txt", header = T, sep = ",")
singerdata$voice.part
singerdata <- where singerdata$voice.part ="Soprano"
sd = where singerdata$voice.part ="Soprano"
sd =  singerdata$voice.part ="Soprano"
sd =  singerdata$voice.part =="Soprano"
sd
t.test(Bassitem$height,Tenoritem$height,alternative="less",var.equal=false)
t.test(Bassitem$height,Tenoritem$height,alternative="less",var.equal=Dalse)
t.test(Bassitem$height,Tenoritem$height,alternative="less",var.equal=Dalse)
t.test(Bassitem$height,Tenoritem$height,alternative="less",var.equal=False)
t.test(Bassitem$height,Tenoritem$height,alternative="less",var.equal=FALSE)
t.test(x, alternative = "less", mu = 10)
x = replicate(1000,rt(n,mean=9.02,sd))
t.test(x, alternative = "less", mu = 10)
x = replicate(1000,rt(n,mean=9.02,sd))
pvalue = function(mu,sd,n){
x = rt(n,mean=9.02,sd)
tstat= (mean(x)-10)/(2.22/sqrt(n))
return (1-pt(tstat,n-1))
}
rep_pval=replicate(1000,pvalue(10,20))
#computing test static.
n=20
tstat = (9.02-10)/(2.22/sqrt(n))
#tstat
#-1.974186
pval = (1-pt(tstat,n-1))
#pval =0.9684606
#function to calculate p-value
pvalue = function(mu,sd,n){
x = rt(n,mean=9.02,sd)
tstat= (mean(x)-10)/(2.22/sqrt(n))
return (1-pt(tstat,n-1))
}
#monte-carlo simulation
rep_pval=replicate(1000,pvalue(10,20))
mean(rep_pval)
#direct method.
x = replicate(1000,rt(n,mean=9.02,sd))
t.test(x, alternative = "less", mu = 10)
n=20
tstat = (9.02-10)/(2.22/sqrt(n))
#tstat
#-1.974186
pval = (1-pt(tstat,n-1))
#pval =0.9684606
#function to calculate p-value
pvalue = function(mu,sd,n){
x = rt(n,mean=9.02,sd)
tstat= (mean(x)-10)/(2.22/sqrt(n))
return (1-pt(tstat,n-1))
}
rep_pval=replicate(1000,pvalue(10,20))
mean(rep_pval)
pvalue = function(mu,sd,n){
x = rt(n,9.02,sd)
tstat= (mean(x)-10)/(2.22/sqrt(n))
return (1-pt(tstat,n-1))
}
#monte-carlo simulation
rep_pval=replicate(1000,pvalue(10,20))
mean(rep_pval)
#direct method.
x = replicate(1000,rt(n,mean=9.02,sd))
t.test(x, alternative = "less", mu = 10)
n=20
tstat = (9.02-10)/(2.22/sqrt(n))
#tstat
#-1.974186
pval = (1-pt(tstat,n-1))
#pval =0.9684606
#function to calculate p-value
pvalue = function(mu,sd,n){
x = rt(n,sd)
tstat= (mean(x)-10)/(2.22/sqrt(n))
return (1-pt(tstat,n-1))
}
#monte-carlo simulation
rep_pval=replicate(1000,pvalue(10,20))
mean(rep_pval)
#direct method.
x = replicate(1000,rt(n,mean=9.02,sd))
t.test(x, alternative = "less", mu = 10)
#computing test static.
n=20
tstat = (9.02-10)/(2.22/sqrt(n))
#tstat
#-1.974186
pval = (1-pt(tstat,n-1))
#pval =0.9684606
#function to calculate p-value
pvalue = function(mu,sd,n){
x = rt(n,sd)
tstat= (mean(x)-10)/(2.22/sqrt(n))
return (1-pt(tstat,n-1))
}
#monte-carlo simulation
rep_pval=replicate(1000,pvalue(10,20))
mean(rep_pval)
#direct method.
x = replicate(1000,rt(mean=9.02,sd,n))
n=20
tstat = (9.02-10)/(2.22/sqrt(n))
#tstat
#-1.974186
pval = (1-pt(tstat,n-1))
#pval =0.9684606
#function to calculate p-value
pvalue = function(mu,sd,n){
x = rt(n,sd)
tstat= (mean(x)-10)/(2.22/sqrt(n))
return (1-pt(tstat,n-1))
}
#monte-carlo simulation
rep_pval=replicate(1000,pvalue(10,20))
mean(rep_pval)
#computing test static.
n=20
tstat = (9.02-10)/(2.22/sqrt(n))
#tstat
#-1.974186
pval = (1-pt(tstat,n-1))
#pval =0.9684606
#function to calculate p-value
pvalue = function(mu,sd,n){
x = rt(n,mean=9.02,sd)
tstat= (mean(x)-10)/(2.22/sqrt(n))
return (1-pt(tstat,n-1))
}
#monte-carlo simulation
rep_pval=replicate(1000,pvalue(10,20))
mean(rep_pval)
#computing test static.
n=20
tstat = (9.02-10)/(2.22/sqrt(n))
#tstat
#-1.974186
pval = (1-pt(tstat,n-1))
#pval =0.9684606
#function to calculate p-value
pvalue = function(mu,sd,n){
x = rt(n,sd)
tstat= (mean(x)-10)/(2.22/sqrt(n))
return (1-pt(tstat,n-1))
}
#monte-carlo simulation
rep_pval=replicate(1000,pvalue(10,20))
mean(rep_pval)
n=20
tstat = (9.02-10)/(2.22/sqrt(n))
#tstat
#-1.974186
pval = (1-pt(tstat,n-1))
#pval =0.9684606
#function to calculate p-value
pvalue = function(mu,n){
x = rt(n,df=n-1)
tstat= (mean(x)-10)/(2.22/sqrt(n))
return (1-pt(tstat,n-1))
}
#monte-carlo simulation
rep_pval=replicate(1000,pvalue(10,20))
mean(rep_pval)
x = replicate(1000,rt(n,df=n-1))
t.test(x, alternative = "less", mu = 10)
x = replicate(1000,rt(n,df=n-1))
t.test(x, alternative = "two", mu = 10)
t.test
??t.test
t.test(x, alternative = "greater", mu = 10)
x = replicate(1000,rt(n,df=n-1))
t.test(x, alternative = "greater", mu = 10)
x = replicate(1000,rt(n,df=n-1))
t.test(x, alternative = "greater", mu = 10,parameter=n-1)
se=sqrt((nb-1)*svarb+(nt-1)*svart)/(nb+nt-2))
se=sqrt(((nb-1)*svarb+(nt-1)*svart)/(nb+nt-2))
singerdata <- read.csv("singer.txt", header = T, sep = ",")
list = unique(singerdata$voice)
colnames(singerdata)<-c("height","voice")
#get the subset of data.
Bassitem = subset(singerdata,singerdata$voice.part=='Bass')
Tenoritem = subset(singerdata,singerdata$voice.part=='Tenor')
Altoitem = subset(singerdata,singerdata$voice.part=='Alto')
Sopranoitem = subset(singerdata,singerdata$voice.part=='Soprano')
boxplot(Bassitem$height,Tenoritem$height,Altoitem$height,Sopranoitem$height,names=c('Bass','Tenor','Alto','Soprano'))
par(mfrow = c(1, 4))
hist(Bassitem$height,main="Bass")
hist(Tenoritem$height,main="Tenor")
hist(Altoitem$height,main="Alto")
hist(Sopranoitem$height,main="Soprano")
par(mfrow = c(1, 1))
par(mfrow = c(1, 4))
qqnorm(Bassitem$height, main="Q-Q plot for Baseitem")
qqline(Bassitem$height)
qqnorm(Tenoritem$height, main="Q-Q plot for Tenoritem")
qqline(Tenoritem$height)
qqnorm(Altoitem$height, main="Q-Q plot for Altoitem")
qqline(Altoitem$height)
qqnorm(Sopranoitem$height, main="Q-Q plot for Sopranoitem")
qqline(Sopranoitem$height)
par(mfrow = c(1, 1))
plot(df)
qqnorm(bass_height$bass_height)
boxplot(bass_height$bass_height,Soprano_height$Soprano_height,Alto_height$Alto_height,Tenor_height$Tenor_height)
#Bassitem, Tenoritem
#sample size.
cint = function (samplemeanb,sampleneant,alpha,se){
(samplemeanb -sampleneant)+c(-1,1)*qnorm(1-alpha/2)*se
}
nb = length(Bassitem$height)
#65
nt = length(Tenoritem$height)
#42
smeanb =mean(Bassitem$height)
#70.984
smeant =mean(Tenoritem$height)
#69.40476
svarb = var(Bassitem$height)
#6.327885
svart = var(Tenoritem$height)
alpha = 0.05
se=sqrt(((nb-1)*svarb+(nt-1)*svart)/(nb+nt-2))
se
se=sqrt(((nb-1)*svarb+(nt-1)*svart)/(nb+nt-2))
se
se
sqaurese=((nb-1)*svarb+(nt-1)*svart) / (nb+nt-2)
squarese
squarese
sqaurese=((nb-1)*svarb+(nt-1)*svart) / (nb+nt-2)
squarese
sqaure_se=((nb-1)*svarb+(nt-1)*svart) / (nb+nt-2)
t.test(Bassitem$height,Tenoritem$height,alternative="less",var.equal=FALSE
t.test
t.test(Bassitem$height,Tenoritem$height,alternative="less",var.equal=FALSE
)
t.test(Bassitem$height,Tenoritem$height,alternative="less",var.equal=FALSE)
t.test(Bassitem$height,Tenoritem$height,alternative="less",var.equal=FALSE)
t.test(Bassitem$height,Tenoritem$height,alternative="less",var.equal=FALSE);
singerdata <- read.csv("singer.txt", header = T, sep = ",")
list = unique(singerdata$voice)
colnames(singerdata)<-c("height","voice")
#get the subset of data.
Bassitem = subset(singerdata,singerdata$voice.part=='Bass')
Tenoritem = subset(singerdata,singerdata$voice.part=='Tenor')
Altoitem = subset(singerdata,singerdata$voice.part=='Alto')
Sopranoitem = subset(singerdata,singerdata$voice.part=='Soprano')
boxplot(Bassitem$height,Tenoritem$height,Altoitem$height,Sopranoitem$height,names=c('Bass','Tenor','Alto','Soprano'))
par(mfrow = c(1, 4))
hist(Bassitem$height,main="Bass")
hist(Tenoritem$height,main="Tenor")
hist(Altoitem$height,main="Alto")
hist(Sopranoitem$height,main="Soprano")
par(mfrow = c(1, 1))
par(mfrow = c(1, 4))
qqnorm(Bassitem$height, main="Q-Q plot for Baseitem")
qqline(Bassitem$height)
qqnorm(Tenoritem$height, main="Q-Q plot for Tenoritem")
qqline(Tenoritem$height)
qqnorm(Altoitem$height, main="Q-Q plot for Altoitem")
qqline(Altoitem$height)
qqnorm(Sopranoitem$height, main="Q-Q plot for Sopranoitem")
qqline(Sopranoitem$height)
par(mfrow = c(1, 1))
plot(df)
qqnorm(bass_height$bass_height)
boxplot(bass_height$bass_height,Soprano_height$Soprano_height,Alto_height$Alto_height,Tenor_height$Tenor_height)
#Bassitem, Tenoritem
#sample size.
cint = function (samplemeanb,sampleneant,alpha,se){
(samplemeanb -sampleneant)+c(-1,1)*qnorm(1-alpha/2)*se
}
nb = length(Bassitem$height)
#65
nt = length(Tenoritem$height)
#42
smeanb =mean(Bassitem$height)
#70.984
smeant =mean(Tenoritem$height)
#69.40476
svarb = var(Bassitem$height)
#6.327885
svart = var(Tenoritem$height)
alpha = 0.05
sqaure_se=((nb-1)*svarb +(nt-1)*svart) / (nb+nt-2)
#cint -1.22598 4.385695
alpha =0.05
cintval =cint(samplemeanb,sampleneant,alpha,se)
#direct method.
t.test(Bassitem$height,Tenoritem$height,alternative="greater",var.equal=FALSE)
summary(Sopranoitem$height)
summary(Sopranoitem$height)
summary(Sopranoitem$height)
singerdata <- read.csv("singer.txt", header = T, sep = ",")
list = unique(singerdata$voice)
colnames(singerdata)<-c("height","voice")
#get the subset of data.
Bassitem = subset(singerdata,singerdata$voice.part=='Bass')
Tenoritem = subset(singerdata,singerdata$voice.part=='Tenor')
Altoitem = subset(singerdata,singerdata$voice.part=='Alto')
Sopranoitem = subset(singerdata,singerdata$voice.part=='Soprano')
#side by side boxplot
boxplot(Bassitem$height,Tenoritem$height,Altoitem$height,Sopranoitem$height,names=c('Bass','Tenor','Alto','Soprano'))
#Histogram plot
par(mfrow = c(1, 4))
hist(Bassitem$height,main="Bass")
hist(Tenoritem$height,main="Tenor")
hist(Altoitem$height,main="Alto")
hist(Sopranoitem$height,main="Soprano")
par(mfrow = c(1, 1))
singerdata <- read.csv("singer.txt", header = T, sep = ",")
list = unique(singerdata$voice)
colnames(singerdata)<-c("height","voice")
#get the subset of data.
Bassitem = subset(singerdata,singerdata$voice.part=='Bass')
Tenoritem = subset(singerdata,singerdata$voice.part=='Tenor')
Altoitem = subset(singerdata,singerdata$voice.part=='Alto')
Sopranoitem = subset(singerdata,singerdata$voice.part=='Soprano')
#side by side boxplot
boxplot(Bassitem$height,Tenoritem$height,Altoitem$height,Sopranoitem$height,names=c('Bass','Tenor','Alto','Soprano'))
#Histogram plot
par(mfrow = c(1, 4))
hist(Bassitem$height,main="Bass")
hist(Tenoritem$height,main="Tenor")
hist(Altoitem$height,main="Alto")
hist(Sopranoitem$height,main="Soprano")
par(mfrow = c(1, 1))
singerdata <- read.csv("singer.txt", header = T, sep = ",")
list = unique(singerdata$voice)
colnames(singerdata)<-c("height","voice")
#get the subset of data.
Bassitem = subset(singerdata,singerdata$voice.part=='Bass')
Tenoritem = subset(singerdata,singerdata$voice.part=='Tenor')
Altoitem = subset(singerdata,singerdata$voice.part=='Alto')
Sopranoitem = subset(singerdata,singerdata$voice.part=='Soprano')
#side by side boxplot
boxplot(Bassitem$height,Tenoritem$height,Altoitem$height,Sopranoitem$height,names=c('Bass','Tenor','Alto','Soprano'))
#Histogram plot
par(mfrow = c(1, 4))
hist(Bassitem$height,main="Bass")
hist(Tenoritem$height,main="Tenor")
hist(Altoitem$height,main="Alto")
hist(Sopranoitem$height,main="Soprano")
par(mfrow = c(1, 1))
Bassitem = subset(singerdata,singerdata$voice.part=='Bass')
Tenoritem = subset(singerdata,singerdata$voice.part=='Tenor')
Altoitem = subset(singerdata,singerdata$voice.part=='Alto')
Sopranoitem = subset(singerdata,singerdata$voice.part=='Soprano')
boxplot(Bassitem$height,Tenoritem$height,Altoitem$height,Sopranoitem$height,names=c('Bass','Tenor','Alto','Soprano'))
singerdata <- read.csv("singer.txt", header = T, sep = ",")
list = unique(singerdata$voice)
colnames(singerdata)<-c("height","voice")
#get the subset of data.
Bassitem = subset(singerdata,singerdata$voice.part=='Bass')
Tenoritem = subset(singerdata,singerdata$voice.part=='Tenor')
Altoitem = subset(singerdata,singerdata$voice.part=='Alto')
Sopranoitem = subset(singerdata,singerdata$voice.part=='Soprano')
#side by side boxplot
boxplot(Bassitem$height,Tenoritem$height,Altoitem$height,Sopranoitem$height,names=c('Bass','Tenor','Alto','Soprano'))
singerdata <- read.csv("singer.txt", header = T, sep = ",")
list = unique(singerdata$voice)
colnames(singerdata)<-c("height","voice")
#get the subset of data.
Bassitem = subset(singerdata,singerdata$voice.part=='Bass')
Tenoritem = subset(singerdata,singerdata$voice.part=='Tenor')
Altoitem = subset(singerdata,singerdata$voice.part=='Alto')
Sopranoitem = subset(singerdata,singerdata$voice.part=='Soprano')
list
Bassitem = subset(singerdata,singerdata$voice.part=='Bass')
Tenoritem = subset(singerdata,singerdata$voice.part=='Tenor')
Altoitem = subset(singerdata,singerdata$voice.part=='Alto')
Sopranoitem = subset(singerdata,singerdata$voice.part=='Soprano')
boxplot(Bassitem$height,Tenoritem$height,Altoitem$height,Sopranoitem$height,names=c('Bass','Tenor','Alto','Soprano'))
boxplot(Bassitem$height,Tenoritem$height,Altoitem$height,Sopranoitem$height,names=c('Bass','Tenor','Alto','Soprano'))
par(mfrow = c(1, 4))
hist(Bassitem$height,main="Bass")
hist(Tenoritem$height,main="Tenor")
hist(Altoitem$height,main="Alto")
hist(Sopranoitem$height,main="Soprano")
par(mfrow = c(1, 1))
par(mfrow = c(1, 4))
qqnorm(Bassitem$height, main="Q-Q plot for Baseitem")
qqline(Bassitem$height)
qqnorm(Tenoritem$height, main="Q-Q plot for Tenoritem")
qqline(Tenoritem$height)
qqnorm(Altoitem$height, main="Q-Q plot for Altoitem")
qqline(Altoitem$height)
qqnorm(Sopranoitem$height, main="Q-Q plot for Sopranoitem")
qqline(Sopranoitem$height)
par(mfrow = c(1, 1))
#
summary(Sopranoitem$height)
summary(Sopranoitem$height)
