# >
brks.to.use <- seq(10, 34, by = 4) # give intervals:
# 10-14 (less than 14), 14-18, ..., 30-34 (>= 30)
figure.title <- "Income share of top 1% earners in 2012"
# Save the map to a file to viewing (you can plot on the screen also, but it takes
# much longer that way. The ratio of US height to width is 1:9.)
ggsave(p(usa.df, brks.to.use, figure.title), height = 4, width = 4*1.9,
file = "usa_income_share.jpg")
#####################################################################################
# Making a map using R #
# Making a map esesntially involves three steps --- getting a shape file for map,
#		getting the data, and plotting. As an example, we will make a map of
#		state level income share of the top 1% of income earners in 2012 in
#		the US (see http://www.shsu.edu/eco_mwf/inequality.html for more
#		more information about the variable and the data.)
#		But the ideas are quite general.
# Much of what you would see below has been learnt from:
# (a) http://www.kevjohnson.org/making-maps-in-r/ for a general introduction to map
#		making in R
# (b) https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/colorPaletteCheatsheet.pdf
#		for an introduction to colors in R
# See also:
# https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/ggmap/ggmapCheatsheet.pdf
#		for an introduction to using Google maps in making maps using
#		using the R package ggmap
#####################################################################################
# Use ?functionname to see help on any unfamiliar functions.
# If not already installed, use install.packages("packagename") to first install
# a package before loading it with library command.
library(raster) # to get map shape file
library(ggplot2) # for plotting and miscellaneuous things
library(ggmap) # for plotting
library(plyr) # for merging datasets
library(scales) # to get nice looking legends
library(maps)
# Get a shape file of states in the US
usa.df <- map_data("state")
colnames(usa.df)[5] <- "State"
# Get the data to be plotted
usa.dat <- read.table("usstatesWTID.csv", header = T, sep = ",")
usa.dat$State <- tolower(usa.dat$State)
usa.dat <- usa.dat[usa.dat$Year == 2012, c("Year", "State", "Top1_adj")]
# Merge the data with the shape file
usa.df <- join(usa.df, usa.dat, by = "State", type = "inner")
# Abbreviations of states and where thy should be plotted
states <- data.frame(state.center, state.abb) # centers of states and abbreviations
subset <- tolower(state.name) %in% usa.df$State # exclude Hawaii as there is no data for this state
states <- states[subset, ]
# Write a function that does the plotting (Feel free to play around
# with the options)
p <- function(data, brks, title) {
ggp <- ggplot() +
#		Draw borders of states
geom_polygon(data = data, aes(x = long, y = lat, group = group,
fill = Top1_adj), color = "black", size = 0.15) +
# 		Use shades of red for plotting; trans = "reverse" option
# 		makes the shades go from dark to light as the income share increases,
#		ensuring that darkest red = worst case scenario.
#		scale_fill_distiller(palette = "Reds", breaks = brks,
#		trans = "reverse") +
scale_fill_gradient2(midpoint = 50, low ="orangered1" ,mid="aliceblue", high="deepskyblue3",
break = c(0,25,50,75,100), labels = c("Trump","75","50","75","Clinton"),
limits= c(0,100)) +
#		Add legend
theme_nothing(legend = TRUE) + labs(title = title, fill = "") +
#		Add state abbreviations
geom_text(data = states, aes(x = x, y = y, label = state.abb), size = 3)
return(ggp)
}
# Get the break points for different shades
# > range(usa.df$Top1_adj)
# [1] 13.68477 33.00785
# >
brks.to.use <- seq(10, 34, by = 4) # give intervals:
# 10-14 (less than 14), 14-18, ..., 30-34 (>= 30)
figure.title <- "Income share of top 1% earners in 2012"
# Save the map to a file to viewing (you can plot on the screen also, but it takes
# much longer that way. The ratio of US height to width is 1:9.)
ggsave(p(usa.df, brks.to.use, figure.title), height = 4, width = 4*1.9,
file = "usa_income_share.jpg")
#####################################################################################
# Making a map using R #
# Making a map esesntially involves three steps --- getting a shape file for map,
#		getting the data, and plotting. As an example, we will make a map of
#		state level income share of the top 1% of income earners in 2012 in
#		the US (see http://www.shsu.edu/eco_mwf/inequality.html for more
#		more information about the variable and the data.)
#		But the ideas are quite general.
# Much of what you would see below has been learnt from:
# (a) http://www.kevjohnson.org/making-maps-in-r/ for a general introduction to map
#		making in R
# (b) https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/colorPaletteCheatsheet.pdf
#		for an introduction to colors in R
# See also:
# https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/ggmap/ggmapCheatsheet.pdf
#		for an introduction to using Google maps in making maps using
#		using the R package ggmap
#####################################################################################
# Use ?functionname to see help on any unfamiliar functions.
# If not already installed, use install.packages("packagename") to first install
# a package before loading it with library command.
library(raster) # to get map shape file
library(ggplot2) # for plotting and miscellaneuous things
library(ggmap) # for plotting
library(plyr) # for merging datasets
library(scales) # to get nice looking legends
library(maps)
# Get a shape file of states in the US
usa.df <- map_data("state")
colnames(usa.df)[5] <- "State"
# Get the data to be plotted
usa.dat <- read.table("usstatesWTID.csv", header = T, sep = ",")
usa.dat$State <- tolower(usa.dat$State)
usa.dat <- usa.dat[usa.dat$Year == 2012, c("Year", "State", "Top1_adj")]
# Merge the data with the shape file
usa.df <- join(usa.df, usa.dat, by = "State", type = "inner")
# Abbreviations of states and where thy should be plotted
states <- data.frame(state.center, state.abb) # centers of states and abbreviations
subset <- tolower(state.name) %in% usa.df$State # exclude Hawaii as there is no data for this state
states <- states[subset, ]
# Write a function that does the plotting (Feel free to play around
# with the options)
p <- function(data, brks, title) {
ggp <- ggplot() +
#		Draw borders of states
geom_polygon(data = data, aes(x = long, y = lat, group = group,
fill = Top1_adj), color = "black", size = 0.15) +
# 		Use shades of red for plotting; trans = "reverse" option
# 		makes the shades go from dark to light as the income share increases,
#		ensuring that darkest red = worst case scenario.
#		scale_fill_distiller(palette = "Reds", breaks = brks,
#		trans = "reverse") +
scale_fill_gradient2(midpoint = 50, low ="orangered1" ,mid="aliceblue", high="deepskyblue3",
break = c(0,25,50,75,100), labels = c("Trump","75","50","75","Clinton"),
limits= c(0,100)) +
#		Add legend
theme_nothing(legend = TRUE) + labs(title = title, fill = "") +
#		Add state abbreviations
geom_text(data = states, aes(x = x, y = y, label = state.abb), size = 3)
return(ggp)
}
# Get the break points for different shades
# > range(usa.df$Top1_adj)
# [1] 13.68477 33.00785
# >
brks.to.use <- seq(10, 34, by = 4) # give intervals:
# 10-14 (less than 14), 14-18, ..., 30-34 (>= 30)
figure.title <- "Income share of top 1% earners in 2012"
# Save the map to a file to viewing (you can plot on the screen also, but it takes
# much longer that way. The ratio of US height to width is 1:9.)
ggsave(p(usa.df, brks.to.use, figure.title), height = 4, width = 4*1.9,
file = "usa_income_share.jpg")
#####################################################################################
# Making a map using R #
# Making a map esesntially involves three steps --- getting a shape file for map,
#		getting the data, and plotting. As an example, we will make a map of
#		state level income share of the top 1% of income earners in 2012 in
#		the US (see http://www.shsu.edu/eco_mwf/inequality.html for more
#		more information about the variable and the data.)
#		But the ideas are quite general.
# Much of what you would see below has been learnt from:
# (a) http://www.kevjohnson.org/making-maps-in-r/ for a general introduction to map
#		making in R
# (b) https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/colorPaletteCheatsheet.pdf
#		for an introduction to colors in R
# See also:
# https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/ggmap/ggmapCheatsheet.pdf
#		for an introduction to using Google maps in making maps using
#		using the R package ggmap
#####################################################################################
# Use ?functionname to see help on any unfamiliar functions.
# If not already installed, use install.packages("packagename") to first install
# a package before loading it with library command.
library(raster) # to get map shape file
library(ggplot2) # for plotting and miscellaneuous things
library(ggmap) # for plotting
library(plyr) # for merging datasets
library(scales) # to get nice looking legends
library(maps)
# Get a shape file of states in the US
usa.df <- map_data("state")
colnames(usa.df)[5] <- "State"
# Get the data to be plotted
usa.dat <- read.table("usstatesWTID.csv", header = T, sep = ",")
usa.dat$State <- tolower(usa.dat$State)
usa.dat <- usa.dat[usa.dat$Year == 2012, c("Year", "State", "Top1_adj")]
# Merge the data with the shape file
usa.df <- join(usa.df, usa.dat, by = "State", type = "inner")
# Abbreviations of states and where thy should be plotted
states <- data.frame(state.center, state.abb) # centers of states and abbreviations
subset <- tolower(state.name) %in% usa.df$State # exclude Hawaii as there is no data for this state
states <- states[subset, ]
# Write a function that does the plotting (Feel free to play around
# with the options)
p <- function(data, brks, title) {
ggp <- ggplot() +
#		Draw borders of states
geom_polygon(data = data, aes(x = long, y = lat, group = group,
fill = Top1_adj), color = "black", size = 0.15) +
# 		Use shades of red for plotting; trans = "reverse" option
# 		makes the shades go from dark to light as the income share increases,
#		ensuring that darkest red = worst case scenario.
#		scale_fill_distiller(palette = "Reds", breaks = brks,
#		trans = "reverse") +
scale_fill_gradient2(midpoint = 20, low ="orangered1" ,mid="aliceblue", high="deepskyblue3",
break = c(0,10,20,30,40), labels = c("Trump","0","10","20","Clinton"),
limits= c(0,50)) +
#		Add legend
theme_nothing(legend = TRUE) + labs(title = title, fill = "") +
#		Add state abbreviations
geom_text(data = states, aes(x = x, y = y, label = state.abb), size = 3)
return(ggp)
}
# Get the break points for different shades
# > range(usa.df$Top1_adj)
# [1] 13.68477 33.00785
# >
brks.to.use <- seq(10, 34, by = 4) # give intervals:
# 10-14 (less than 14), 14-18, ..., 30-34 (>= 30)
figure.title <- "Income share of top 1% earners in 2012"
# Save the map to a file to viewing (you can plot on the screen also, but it takes
# much longer that way. The ratio of US height to width is 1:9.)
ggsave(p(usa.df, brks.to.use, figure.title), height = 4, width = 4*1.9,
file = "usa_income_share.jpg")
#####################################################################################
# Making a map using R #
# Making a map esesntially involves three steps --- getting a shape file for map,
#		getting the data, and plotting. As an example, we will make a map of
#		state level income share of the top 1% of income earners in 2012 in
#		the US (see http://www.shsu.edu/eco_mwf/inequality.html for more
#		more information about the variable and the data.)
#		But the ideas are quite general.
# Much of what you would see below has been learnt from:
# (a) http://www.kevjohnson.org/making-maps-in-r/ for a general introduction to map
#		making in R
# (b) https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/colorPaletteCheatsheet.pdf
#		for an introduction to colors in R
# See also:
# https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/ggmap/ggmapCheatsheet.pdf
#		for an introduction to using Google maps in making maps using
#		using the R package ggmap
#####################################################################################
# Use ?functionname to see help on any unfamiliar functions.
# If not already installed, use install.packages("packagename") to first install
# a package before loading it with library command.
library(raster) # to get map shape file
library(ggplot2) # for plotting and miscellaneuous things
library(ggmap) # for plotting
library(plyr) # for merging datasets
library(scales) # to get nice looking legends
library(maps)
# Get a shape file of states in the US
usa.df <- map_data("state")
colnames(usa.df)[5] <- "State"
# Get the data to be plotted
usa.dat <- read.table("usstatesWTID.csv", header = T, sep = ",")
usa.dat$State <- tolower(usa.dat$State)
usa.dat <- usa.dat[usa.dat$Year == 2012, c("Year", "State", "Top1_adj")]
# Merge the data with the shape file
usa.df <- join(usa.df, usa.dat, by = "State", type = "inner")
# Abbreviations of states and where thy should be plotted
states <- data.frame(state.center, state.abb) # centers of states and abbreviations
subset <- tolower(state.name) %in% usa.df$State # exclude Hawaii as there is no data for this state
states <- states[subset, ]
# Write a function that does the plotting (Feel free to play around
# with the options)
p <- function(data, brks, title) {
ggp <- ggplot() +
#		Draw borders of states
geom_polygon(data = data, aes(x = long, y = lat, group = group,
fill = Top1_adj), color = "black", size = 0.15) +
# 		Use shades of red for plotting; trans = "reverse" option
# 		makes the shades go from dark to light as the income share increases,
#		ensuring that darkest red = worst case scenario.
#		scale_fill_distiller(palette = "Reds", breaks = brks,
#		trans = "reverse") +
scale_fill_gradient2(midpoint = 20, low ="orangered1" ,mid="aliceblue", high="deepskyblue3",
break = c(0,10,20,30,40), labels = c("Trump","0","10","20","Clinton"),
limits= c(0,50)) +
#		Add legend
theme_nothing(legend = TRUE) + labs(title = title, fill = "") +
#		Add state abbreviations
geom_text(data = states, aes(x = x, y = y, label = state.abb), size = 3)
return(ggp)
}
# Get the break points for different shades
# > range(usa.df$Top1_adj)
# [1] 13.68477 33.00785
# >
brks.to.use <- seq(10, 34, by = 4) # give intervals:
# 10-14 (less than 14), 14-18, ..., 30-34 (>= 30)
figure.title <- "Income share of top 1% earners in 2012"
# Save the map to a file to viewing (you can plot on the screen also, but it takes
# much longer that way. The ratio of US height to width is 1:9.)
ggsave(p(usa.df, brks.to.use, figure.title), height = 4, width = 4*1.9,
file = "usa_income_share.jpg")
sigmoid <- function(x){}
#sample plot.
sigmoid <- function(x){
1/1+exp(-x)
}
x<- seq(-5,5,0.01)
plot(x,sigmoid(x),col='blue')
#sample plot.
sigmoid <- function(x){
(exp(x)-exp(-x))/(exp(x)+exp(-x))
}
x<- seq(-5,5,0.01)
plot(x,sigmoid(x),col='blue')
#sample plot.
tanhx <- function(x){
(exp(x)-exp(-x))/(exp(x)+exp(-x))
}
x<- seq(-5,5,0.01)
sigmoid <- function(x){
1/1+exp(-x)
}
x<- seq(-5,5,0.01)
plot(x,sigmoid,col='red')
plot(x,tanhx(x),col='blue')
sigmoid <- function(x){
1/1+exp(-x)
}
x<- seq(-5,5,0.01)
plot(x,sigmoid,col='red')
sigmoid <- function(x){
1/1+exp(-x)
}
x<- seq(-5,5,0.01)
plot(x,sigmoid9x),col='red')
sigmoid <- function(x){
1/(1+exp(-x))
}
x<- seq(-5,5,0.01)
plot(x,sigmoid(x),col='red')
#sample plot.
tanhx <- function(x){
(exp(x)-exp(-x))/(exp(x)+exp(-x))
}
x<- seq(-5,5,0.01)
sigmoid <- function(x){
1/(1+exp(-x))
}
x<- seq(-5,5,0.01)
plot(x,sigmoid(x),col='red')
plot(x,tanhx(x),col='blue')
#####################################################################################
# Making a map using R #
# Making a map esesntially involves three steps --- getting a shape file for map,
#		getting the data, and plotting. As an example, we will make a map of
#		state level income share of the top 1% of income earners in 2012 in
#		the US (see http://www.shsu.edu/eco_mwf/inequality.html for more
#		more information about the variable and the data.)
#		But the ideas are quite general.
# Much of what you would see below has been learnt from:
# (a) http://www.kevjohnson.org/making-maps-in-r/ for a general introduction to map
#		making in R
# (b) https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/colorPaletteCheatsheet.pdf
#		for an introduction to colors in R
# See also:
# https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/ggmap/ggmapCheatsheet.pdf
#		for an introduction to using Google maps in making maps using
#		using the R package ggmap
#####################################################################################
# Use ?functionname to see help on any unfamiliar functions.
# If not already installed, use install.packages("packagename") to first install
# a package before loading it with library command.
library(raster) # to get map shape file
library(ggplot2) # for plotting and miscellaneuous things
library(ggmap) # for plotting
library(plyr) # for merging datasets
library(scales) # to get nice looking legends
library(maps)
# Get a shape file of states in the US
usa.df <- map_data("state")
colnames(usa.df)[5] <- "State"
# Get the data to be plotted
usa.dat <- read.table("usstatesWTID.csv", header = T, sep = ",")
usa.dat$State <- tolower(usa.dat$State)
usa.dat <- usa.dat[usa.dat$Year == 2012, c("Year", "State", "Top1_adj")]
# Merge the data with the shape file
usa.df <- join(usa.df, usa.dat, by = "State", type = "inner")
# Abbreviations of states and where thy should be plotted
states <- data.frame(state.center, state.abb) # centers of states and abbreviations
subset <- tolower(state.name) %in% usa.df$State # exclude Hawaii as there is no data for this state
states <- states[subset, ]
# Write a function that does the plotting (Feel free to play around
# with the options)
p <- function(data, brks, title) {
ggp <- ggplot() +
#		Draw borders of states
geom_polygon(data = data, aes(x = long, y = lat, group = group,
fill = Top1_adj), color = "black", size = 0.15) +
# 		Use shades of red for plotting; trans = "reverse" option
# 		makes the shades go from dark to light as the income share increases,
#		ensuring that darkest red = worst case scenario.
scale_fill_distiller(palette = "Reds", breaks = brks,
trans = "reverse") +
#		Add legend
theme_nothing(legend = TRUE) + labs(title = title, fill = "")+
#		Add state abbreviations
geom_text(data = states, aes(x = x, y = y, label = state.abb), size = 3)
return(ggp)
}
# Get the break points for different shades
# > range(usa.df$Top1_adj)
# [1] 13.68477 33.00785
# >
brks.to.use <- seq(10, 34, by = 4) # give intervals:
# 10-14 (less than 14), 14-18, ..., 30-34 (>= 30)
figure.title <- "Income share of top 1% earners in 2012"
# Save the map to a file to viewing (you can plot on the screen also, but it takes
# much longer that way. The ratio of US height to width is 1:9.)
sample = p(usa.df, brks.to.use, figure.title)
ggsave(sample, height = 4, width = 4*1.9,
file = "usa_income_share.jpg")
# Additional Data
# #additional mean,sd,range.
# #margin
# range(usaMerge.df$margin)
# mean(usaMerge.df$margin)
# sd(usaMerge.df$margin)
#
# #trump
# range(usaMerge.df$trump)
# mean(usaMerge.df$trump)
# sd(usaMerge.df$trump)
#
# #hillary
# range(usaMerge.df$clinton)
# mean(usaMerge.df$clinton)
# sd(usaMerge.df$clinton)
#
# boxplot(usaMerge.df$clinton,usaMerge.df$trump,usaMerge.df$margin)
# boxplot(usaMerge.df$trump,usaMerge.df$clinton,usaMerge.df$margin)
# boxplot(usaMerge.df$trump,usaMerge.df$clinton,usaMerge.df$margin)
#
# IQR(usaMerge.df$trump)
# #[1] 16.25
# IQR(usaMerge.df$clinton)
# #[1] 15.05
# IQR(usaMerge.df$margin)
# #[1] 31.35
sigmoid
plot(sigmoid(x))
plot(sigmoid(x),x=c(0:100))
plot(sigmoid(x),x=c(0,100))
plot(sigmoid(x)
)
x<- seq(-500,500,0.01)
par(mfrow=c(1,2))
plot(x,sigmoid(x),col='red')
x<- seq(-500,500,0.01)
par(mfrow=c(1,2))
plot(x,sigmoid(x),col='red')
x<- seq(-500,500,0.01)
par(mfrow=c(1,2))
plot(x,sigmoid(x),col='red')
plot(x,tanhx(x),col='blue')
par(mfrow=c(1,1))
x<- seq(-500,500,100)
par(mfrow=c(1,2))
plot(x,sigmoid(x),col='red')
plot(x,tanhx(x),col='blue')
par(mfrow=c(1,1))
x<- seq(-500,500,10)
sigmoid(-18.23)
sigmoid(-60.1077612071 )
sigmoid(-100.1077612071 )
# Get the Cancer data.
cancerdata <- read.table("prostate_cancer.csv", header = T, sep = ",")
str(cancerdata)
setwd("C:/Users/Akhilesh/Desktop/Akhilesh Graduate studies/Sem 2/SPDS/e learning/Mini Project/MiniProject5")
# Get the Cancer data.
cancerdata <- read.table("prostate_cancer.csv", header = T, sep = ",")
str(cancerdata)
par(mfrow = c(2, 3))
boxplot(cancerdata$psa,	 ylab="PSA")
boxplot((logb(1+cancerdata$psa,2)),ylab="log 2 (1+PSA)")
boxplot(cancerdata$capspen, ylab="capspen")
boxplot(logb(1+cancerdata$capspen,2), ylab="log2 (1+capspen)")
boxplot(cancerdata$cancervol, ylab="cancervol")
boxplot(logb(1+cancerdata$cancervol,2), ylab=" log2 (1 + cancervol)")
par(mfrow = c(1,1))
boxplot(cancerdata$benpros, ylab="benpros")
par(mfrow = c(2, 4))
plot(cancerdata$cancervol,cancerdata$psa,xlab ="Cancer volume (cc)", ylab = "PSA Level(mg/ml)")
plot(cancerdata$weight,cancerdata$psa,xlab ="Weight(gm)", ylab = "PSA Level(mg/ml)")
plot(cancerdata$age,cancerdata$psa,xlab ="age (years)", ylab = "PSA Level(mg/ml)")
plot(cancerdata$benpros,cancerdata$psa,xlab ="Benign prostatic hyperplasia (cm2)", ylab = "PSA Level(mg/ml)")
plot(cancerdata$vesinv,cancerdata$psa,xlab ="Seminal vesicle invasion (1 or 0)", ylab = "PSA Level(mg/ml)")
plot(cancerdata$capspen,cancerdata$psa,xlab ="Capsular penetration", ylab = "PSA Level(mg/ml)")
plot(cancerdata$gleason,cancerdata$psa,xlab ="Gleason score", ylab = "PSA Level(mg/ml)")
par(mfrow = c(1, 1))
par(mfrow = c(2, 4))
plot(cancerdata$cancervol,cancerdata$psa,xlab ="Cancer volume (cc)", ylab = " PSA Level(mg/ml)")
plot(logb(1+cancerdata$cancervol,2),cancerdata$psa,xlab ="log Cancer volume (cc)", ylab = " PSA Level(mg/ml)")
plot(cancerdata$capspen,cancerdata$psa,xlab ="Capsular penetration", ylab = "PSA Level(mg/ml)")
plot(logb(1+cancerdata$capspen,2),cancerdata$psa,xlab ="log Capsular penetration", ylab = "PSA Level(mg/ml)")
plot(cancerdata$cancervol,(logb(1+cancerdata$psa,2)),xlab ="Cancer volume (cc)", ylab = "log PSA Level(mg/ml)")
plot(logb(1+cancerdata$cancervol,2),(logb(1+cancerdata$psa,2)),xlab ="log Cancer volume (cc)", ylab = "log PSA Level(mg/ml)")
plot(cancerdata$capspen,(logb(1+cancerdata$psa,2)),xlab ="Capsular penetration", ylab = "log PSA Level(mg/ml)")
plot(logb(1+cancerdata$capspen,2),(logb(1+cancerdata$psa,2)),xlab ="log Capsular penetration", ylab = " log PSA Level(mg/ml)")
par(mfrow = c(1, 1))
plot(logb(1+cancerdata$cancervol,2),(logb(1+cancerdata$psa,2)),xlab ="log Cancer volume (cc)", ylab = "log PSA Level(mg/ml)")
fit1_cv <- lm((logb(1+psa,2)~logb(1+cancervol,2)),data=cancerdata)
summary(fit1_cv)
abline(fit1_cv)
fitml1_cv <- lm(( logb ( 1 + psa, 2 ) ~ logb ( 1 + cancervol, 2 )),data=cancerdata)
fitml2_cvcap <-lm(( logb ( 1 + psa, 2 ) ~ logb ( 1 + cancervol, 2 )+logb(1+capspen,2)),data=cancerdata)
summary(fitml2_cvcap)
anova(fitml2_cvcap,fitml1_cv)
